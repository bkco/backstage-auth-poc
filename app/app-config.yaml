app:
  title: Scaffolded Backstage App
  baseUrl: http://localhost:3000

organization:
  name: My Company

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/tutorials/backend-to-backend-auth for
  # information on the format
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}
  baseUrl: http://localhost:7007
  listen:
    port: 7007
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, POST, PUT, DELETE]
    credentials: true
  database:
    client: better-sqlite3
    connection: ':memory:'
  cache:
    store: memory
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

# IF YOU ENABLE THIS IT BREAKS ALL THE OUT OF THE BOX CATALOGS
#integrations:
#  github:
#    - host: github.com
#      token: ${GITHUB_TOKEN}
#    ### Example for how to add your GitHub Enterprise instance using the API:
#    # - host: ghe.example.net
#    #   apiBaseUrl: https://ghe.example.net/api/v3
#    #   token: ${GHE_TOKEN}

proxy:
  '/test':
    target: 'https://example.com'
    changeOrigin: true

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

2#auth:
#  # see https://backstage.io/docs/auth/ to learn about auth providers
#  providers: {}

auth:
  environment: development
  providers:
    auth0:
      development:
        clientId: ${AUTH_AUTH0_CLIENT_ID}
        clientSecret: ${AUTH_AUTH0_CLIENT_SECRET}
        domain: ${AUTH_AUTH0_DOMAIN_ID}

scaffolder:
  # see https://backstage.io/docs/features/software-templates/configuration for software template options


# BOILERPLATE BELOW THAT COMES WITH CREATE-APP. Additional rules:allow could be Template & Domain
catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Group, User, Resource, Location]
  locations:
    # Backstage example components
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-components.yaml

    # Backstage example systems
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-systems.yaml

    # Backstage example APIs
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-apis.yaml

    # Backstage example resources
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-resources.yaml

    # Backstage example organization groups
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme/org.yaml

    # Backstage example templates
    - type: url
      target: https://github.com/backstage/software-templates/blob/main/scaffolder-templates/react-ssr-template/template.yaml
      rules:
        - allow: [Template]
    - type: url
      target: https://github.com/backstage/software-templates/blob/main/scaffolder-templates/springboot-grpc-template/template.yaml
      rules:
        - allow: [Template]
    - type: url
      target: https://github.com/backstage/software-templates/blob/main/scaffolder-templates/docs-template/template.yaml
      rules:
        - allow: [Template]
#  # TODO review this as processor
#  processors:
#    githubOrg:
#      providers:
#        - target: https://github.com
#          token: ${GITHUB_TOKEN}
#        #### Example for how to add your GitHub Enterprise instance using the API:
#        # - target: https://ghe.example.net
#        #   apiBaseUrl: https://ghe.example.net/api
#        #   token: ${GHE_TOKEN}
#    microsoftGraphOrg:
#    ### Example for how to add your Microsoft Graph tenant
#    #providers:
#    #  - target: https://graph.microsoft.com/v1.0
#    #    authority: https://login.microsoftonline.com
#    #    tenantId: ${MICROSOFT_GRAPH_TENANT_ID}
#    #    clientId: ${MICROSOFT_GRAPH_CLIENT_ID}
#    #    clientSecret: ${MICROSOFT_GRAPH_CLIENT_SECRET_TOKEN}
#    #    userFilter: accountEnabled eq true and userType eq 'member'
#    #    groupFilter: securityEnabled eq false and mailEnabled eq true and groupTypes/any(c:c+eq+'Unified')
